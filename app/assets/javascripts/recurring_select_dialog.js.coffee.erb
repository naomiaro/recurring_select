window.RecurringSelectDialog =
  class RecurringSelectDialog
    constructor: (@recurring_selector) ->
      @current_rule = @recurring_selector.recurring_select('current_rule')
      @initDialogBox()
      if not @current_rule.hash? or not @current_rule.hash.rule_type?
        @freqChanged()
      else
        setTimeout @positionDialogVert, 10 # allow initial render

    initDialogBox: ->
      $(".rs_dialog_holder").remove()

      open_in = $("body")
      open_in = $(".ui-page-active") if $(".ui-page-active").length
      open_in.append @template()
      @outer_holder = $(".rs_dialog_holder")
      @inner_holder = @outer_holder.find ".rs_dialog"
      @content = @outer_holder.find ".rs_dialog_content"
      @positionDialogVert(true)
      @mainEventInit()
      @freqInit()
      @endInit()
      @summaryInit()
      @freq_select.focus()
      @outer_holder.trigger "recurring_select:dialog_opened"

    positionDialogVert: (initial_positioning) =>
      window_height = $(window).height()
      window_width  = $(window).width()
      dialog_height = @content.outerHeight()
      if dialog_height < 80
        dialog_height = 80
      margin_top = (window_height - dialog_height)/2 - 30
      margin_top = 10 if margin_top < 10
      # if dialog_height > window_height - 20
      #   dialog_height = window_height - 20

      new_style_hash =
        "margin-top" : margin_top+"px"
        "min-height" : dialog_height+"px"

      if initial_positioning?
        @inner_holder.css new_style_hash
        @inner_holder.trigger "recurring_select:dialog_positioned"
      else
        @content.css {"width": @content.width()+"px"}
        @inner_holder.addClass "animated"
        @inner_holder.animate new_style_hash, 200, =>
          @inner_holder.removeClass "animated"
          @content.css {"width": "auto"}
          @inner_holder.trigger "recurring_select:dialog_positioned"

    cancel: =>
      @outer_holder.remove()
      @recurring_selector.recurring_select('cancel')

    outerCancel: (event) =>
      if $(event.target).hasClass("rs_dialog_holder")
        @cancel()

    save: =>
      return if !@current_rule.str?
      @outer_holder.remove()
      @recurring_selector.recurring_select('save', @current_rule)

# ========================= Init Methods ===============================

    mainEventInit: ->
      # Tap hooks are for jQueryMobile
      @outer_holder.on 'click tap', @outerCancel
      @content.on 'click tap', 'h1 a', @cancel
      @save_button = @content.find('input.rs_save').on "click tap", @save
      @content.find('input.rs_cancel').on "click tap", @cancel

    freqInit: ->
      @freq_select = @outer_holder.find ".rs_frequency"
      if @current_rule.hash? && (rule_type = @current_rule.hash.rule_type)?
        if rule_type.search(/Weekly/) != -1
          @freq_select.prop('selectedIndex', 1)
          @initWeeklyOptions()
        else if rule_type.search(/Monthly/) != -1
          @freq_select.prop('selectedIndex', 2)
          @initMonthlyOptions()
        else if rule_type.search(/Yearly/) != -1
          @freq_select.prop('selectedIndex', 3)
          @initYearlyOptions()
        else
          @initDailyOptions()
      @freq_select.on "change", @freqChanged

    initDailyOptions: ->
      section = @content.find('.daily_options')
      interval_input = section.find('.rs_daily_interval')
      interval_input.val(@current_rule.hash.interval)
      interval_input.on "change keyup", @intervalChanged
      section.show()

    initWeeklyOptions: ->
      section = @content.find('.weekly_options')

      # connect the interval field
      interval_input = section.find('.rs_weekly_interval')
      interval_input.val(@current_rule.hash.interval)
      interval_input.on "change keyup", @intervalChanged

      # connect the day fields
      if @current_rule.hash.validations? && @current_rule.hash.validations.day?
        $(@current_rule.hash.validations.day).each (index, val) ->
          section.find(".day_holder a[data-value='"+val+"']").addClass("selected")
      section.off('click', '.day_holder a').on "click", ".day_holder a", @daysChanged

      section.show()

    initMonthlyOptions: ->
      section = @content.find('.monthly_options')
      interval_input = section.find('.rs_monthly_interval')
      interval_input.val(@current_rule.hash.interval)
      interval_input.on "change keyup", @intervalChanged

      @current_rule.hash.validations ||= {}
      @current_rule.hash.validations.day_of_month ||= []
      @current_rule.hash.validations.day_of_week ||= {}
      @init_calendar_days(section)
      @init_calendar_weeks(section)

      in_week_mode = Object.keys(@current_rule.hash.validations.day_of_week).length > 0
      section.find(".monthly_rule_type_week").prop("checked", in_week_mode)
      section.find(".monthly_rule_type_day").prop("checked", !in_week_mode)
      @toggle_month_view()
      section.find("input[name=monthly_rule_type]").on "change", @toggle_month_view
      section.show()

    initYearlyOptions: ->
      section = @content.find('.yearly_options')
      interval_input = section.find('.rs_yearly_interval')
      interval_input.val(@current_rule.hash.interval)
      interval_input.on "change keyup", @intervalChanged
      section.show()

    endInit: ->
      section = @content.find('.ending_options')
      section.find("input[name=endson]").on "change", @endChanged
      section.find("input[type=text]").on "blur", @endInputChanged

    summaryInit: ->
      @summary = @outer_holder.find(".rs_summary")
      @summaryUpdate()

# ========================= render methods ===============================

    summaryUpdate: (new_string) =>
      @summary.width @content.width()
      if @current_rule.hash? && @current_rule.str?
        @summary.removeClass "fetching"
        @save_button.removeClass("disabled")
        rule_str = @current_rule.str.replace("*", "")
        if rule_str.length < 20
          rule_str = "#{$.fn.recurring_select.texts["summary"]}: "+rule_str
        @summary.find("span").html rule_str
      else
        @summary.addClass "fetching"
        @save_button.addClass("disabled")
        @summary.find("span").html ""
        @summaryFetch()

    summaryFetch: ->
      return if !(@current_rule.hash? && (rule_type = @current_rule.hash.rule_type)?)
      @content.css {"width": @content.width()+"px"}
      $.ajax
        url: "/recurring_select/translate",
        type: "POST",
        data: @current_rule.hash
        success: @summaryFetchSuccess

    summaryFetchSuccess: (data) =>
      @current_rule.str = data
      @summaryUpdate()
      @content.css {"width": "auto"}

    init_calendar_days: (section) =>
      monthly_calendar = section.find(".rs_calendar_day")

      fragment = $(document.createDocumentFragment())
      fragment.append "<th></th>"
      td = $(document.createElement("td"))
      span = $(document.createElement("span"))

      validations = @current_rule.hash.validations.day_of_month

      for num in [1..31]
        day_link = $("<a>", {text: num})
        span.append day_link
        if $.inArray(num, validations) != -1
          day_link.addClass("selected")

      # add last day of month button
      end_of_month_link = $(document.createElement("a"))
        .text($.fn.recurring_select.texts["last_day"])
        .addClass("end_of_month")

      if $.inArray(-1, validations) != -1
        end_of_month_link.addClass("selected")

      span.append end_of_month_link
      td.append span
      fragment.append td

      monthly_calendar.html fragment
      monthly_calendar.find("a").on "click tap", @dateOfMonthChanged

    init_calendar_weeks: (section) =>
      monthly_calendar = section.find(".rs_calendar_week")

      fragment = $(document.createDocumentFragment())
      fragment.append "<th></th>"
      td = $(document.createElement("td"))
      span = $(document.createElement("span"))

      row_labels = $.fn.recurring_select.texts["order"]
      show_row = $.fn.recurring_select.options["monthly"]["show_week"]
      cell_str = $.fn.recurring_select.texts["days_first_letter"]

      for num, index in [1, 2, 3, 4, 5, -1]
        if show_row[index]
          span.append "<span>#{row_labels[index]}</span>"
          for day_of_week in [0..6]
            day_link = $("<a>", {text: cell_str[day_of_week]})
            day_link.attr("day", day_of_week)
            day_link.attr("instance", num)
            span.append day_link

      td.append span
      fragment.append td

      validations = @current_rule.hash.validations.day_of_week
      $.each validations, (key, value) ->
        $.each value, (index, instance) ->
          td.find("a[day='#{key}'][instance='#{instance}']").addClass("selected")

      monthly_calendar.html fragment
      monthly_calendar.find("a").on "click tap", @weekOfMonthChanged

    toggle_month_view: =>
      week_mode = @content.find(".monthly_rule_type_week").prop("checked")
      @content.find(".rs_calendar_week").toggle(week_mode)
      @content.find(".rs_calendar_day").toggle(!week_mode)

# ========================= Change callbacks ===============================

    freqChanged: =>
      @current_rule.hash = null unless $.isPlainObject(@current_rule.hash) # for custom values

      @current_rule.hash ||= {}
      @current_rule.hash.interval = 1
      #@current_rule.hash.until = null
      #@current_rule.hash.count = null
      @current_rule.hash.validations = null

      @content.find(".freq_option_section")
        .hide()
        .find("input[type=radio], input[type=checkbox]")
          .prop("checked", false)

      switch @freq_select.val()
        when "Weekly"
          @current_rule.hash.rule_type = "IceCube::WeeklyRule"
          @current_rule.str = $.fn.recurring_select.texts["weekly"]
          @initWeeklyOptions()
        when "Monthly"
          @current_rule.hash.rule_type = "IceCube::MonthlyRule"
          @current_rule.str = $.fn.recurring_select.texts["monthly"]
          @initMonthlyOptions()
        when "Yearly"
          @current_rule.hash.rule_type = "IceCube::YearlyRule"
          @current_rule.str = $.fn.recurring_select.texts["yearly"]
          @initYearlyOptions()
        else
          @current_rule.hash.rule_type = "IceCube::DailyRule"
          @current_rule.str = $.fn.recurring_select.texts["daily"]
          @initDailyOptions()
      @summaryUpdate()
      @positionDialogVert()

    intervalChanged: (event) =>
      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.interval = parseInt($(event.currentTarget).val())
      if @current_rule.hash.interval < 1 || isNaN(@current_rule.hash.interval)
        @current_rule.hash.interval = 1
      @summaryUpdate()

    daysChanged: (event) =>
      $(event.currentTarget).toggleClass("selected")
      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.validations = {}
      raw_days = @content.find(".day_holder a.selected").map -> parseInt($(this).data("value"))
      @current_rule.hash.validations.day = raw_days.get()
      @summaryUpdate()
      false # this prevents default and propogation

    dateOfMonthChanged: (event) =>
      $(event.currentTarget).toggleClass("selected")
      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.validations = {}
      raw_days = @content.find(".monthly_options .rs_calendar_day a.selected").map ->
        res = if $(this).text() == $.fn.recurring_select.texts["last_day"] then -1 else parseInt($(this).text())
        res
      @current_rule.hash.validations.day_of_week = {}
      @current_rule.hash.validations.day_of_month = raw_days.get()
      @summaryUpdate()
      false

    weekOfMonthChanged: (event) =>
      $(event.currentTarget).toggleClass("selected")
      @current_rule.str = null
      @current_rule.hash ||= {}
      @current_rule.hash.validations = {}
      @current_rule.hash.validations.day_of_month = []
      @current_rule.hash.validations.day_of_week = {}
      @content.find(".monthly_options .rs_calendar_week a.selected").each (index, elm) =>
        day = parseInt($(elm).attr("day"))
        instance = parseInt($(elm).attr("instance"))
        @current_rule.hash.validations.day_of_week[day] ||= []
        @current_rule.hash.validations.day_of_week[day].push instance
      @summaryUpdate()
      false

    endChanged: (event) =>
      @content.find(".ending_options input[type=text]")
        .val("")
        .prop("disabled", true)

      id = $(event.currentTarget).attr("id")
      @content.find("label[for=#{id}] input").prop("disabled", false)

      @current_rule.hash.count = null
      @current_rule.hash.until = null

      @summaryFetch()
      false

    endInputChanged: (event) =>
      input = $(event.currentTarget)
      id = input.attr("id")

      if /until/.test(id)
        @current_rule.hash ||= {}
        @current_rule.hash.until = input.val()
      else if /count/.test(id)
        @current_rule.hash ||= {}
        @current_rule.hash.count = input.val()
      @summaryFetch()
      false

# ========================= Change callbacks ===============================

    template: () ->
      str = "
      <div class='rs_dialog_holder'>
        <div class='rs_dialog'>
          <div class='rs_dialog_content'>
            <h1>#{$.fn.recurring_select.texts["repeat"]} <a href='#' title='#{$.fn.recurring_select.texts["cancel"]}' Alt='#{$.fn.recurring_select.texts["cancel"]}'></a> </h1>

            <table>
              <tbody>
                <tr>
                  <th>
                    #{$.fn.recurring_select.texts["frequency"]}:
                  </th>
                  <td>
                    <select id='rs_frequency' class='rs_frequency' name='rs_frequency'>
                      <option value='Daily'>#{$.fn.recurring_select.texts["daily"]}</option>
                      <option value='Weekly'>#{$.fn.recurring_select.texts["weekly"]}</option>
                      <option value='Monthly'>#{$.fn.recurring_select.texts["monthly"]}</option>
                      <option value='Yearly'>#{$.fn.recurring_select.texts["yearly"]}</option>
                    </select>
                  </td>
                </tr>
              </tbody>

              <tbody class='daily_options freq_option_section'>
                <tr>
                  <th>
                    #{$.fn.recurring_select.texts["every"]}
                  </th>
                  <td>
                    <input type='text' name='rs_daily_interval' class='rs_daily_interval rs_interval' value='1' size='2' />
                    #{$.fn.recurring_select.texts["days"]}
                  </td>
                </tr>
              </tbody>
              <tbody class='weekly_options freq_option_section'>
                <tr>
                  <th>
                    #{$.fn.recurring_select.texts["every"]}
                  </th>
                  <td>
                    <input type='text' name='rs_weekly_interval' class='rs_weekly_interval rs_interval' value='1' size='2' />
                    #{$.fn.recurring_select.texts["weeks_on"]}:
                  </td>
                <tr class='day_holder'>
                  <th>#{$.fn.recurring_select.texts["week_repeat"]}</th>
                  <td>
      "
      first_day_of_week = $.fn.recurring_select.options["first_day_of_week"]
      for day_of_week in [first_day_of_week...(7 + first_day_of_week)]
        day_of_week = day_of_week % 7
        str += "<a href='#' data-value='#{day_of_week}'>#{$.fn.recurring_select.texts["days_first_letter"][day_of_week]}</a>"
      str += "
                  </td>
                </tr>
              </tbody>
              <tbody class='monthly_options freq_option_section'>
                <tr>
                  <th>
                    #{$.fn.recurring_select.texts["every"]}
                  </th>
                  <td>
                    <input type='text' name='rs_monthly_interval' class='rs_monthly_interval rs_interval' value='1' size='2' />
                    #{$.fn.recurring_select.texts["months"]}:
                  </td>
                </tr>
                <tr class='monthly_rule_type'>
                  <th>#{$.fn.recurring_select.texts["month_repeat"]}</th>
                  <td>
                    <span>#{$.fn.recurring_select.texts["day_of_month"]} <input type='radio' class='monthly_rule_type_day' name='monthly_rule_type' value='true' /></span>
                    <span>#{$.fn.recurring_select.texts["day_of_week"]} <input type='radio' class='monthly_rule_type_week' name='monthly_rule_type' value='true' /></span>
                  </td>
                </tr>
                <tr class='rs_calendar_day'></tr>
                <tr class='rs_calendar_week'></tr>
              </tbody>
              <tbody class='yearly_options freq_option_section'>
                <tr>
                  <th>
                    #{$.fn.recurring_select.texts["every"]}
                  </th>
                  <td>
                    <input type='text' name='rs_yearly_interval' class='rs_yearly_interval rs_interval' value='1' size='2' />
                    #{$.fn.recurring_select.texts["years"]}
                  </td>
                </tr>
              </tbody>
              <tbody class='ending_options'>
                <tr>
                  <th>
                    #{$.fn.recurring_select.texts["ends"]}
                  </th>
                  <td>
                    <span class='ending_never'>
                      <input id='endson_never' type='radio' checked name='endson'/>
                      <label for='endson_never'>Never</label>
                    </span>
                    <span class='ending_count'>
                      <input id='endson_count' type='radio' name='endson'/>
                      <label for='endson_count'>
                        After
                        <input id='endson_count_value' type='text' disabled size='3'/>
                        Shows
                      </label>
                    </span>
                    <span class='ending_until'>
                      <input id='endson_until' type='radio' name='endson'/>
                      <label for='endson_until'>
                        On
                        <input id='endson_until_value' type='text' disabled size='10'/>
                      </label>
                    </span>
                  </td>
                </tr>
              </tbody>
            </table>
            <div class='rs_summary'>
              <span></span>
            </div>
            <div class='controls'>
              <input type='button' class='rs_save' value='#{$.fn.recurring_select.texts["ok"]}' />
              <input type='button' class='rs_cancel' value='#{$.fn.recurring_select.texts["cancel"]}' />
            </div>
          </div>
        </div>
      </div>
      "
